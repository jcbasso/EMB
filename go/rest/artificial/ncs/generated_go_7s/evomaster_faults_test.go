package generated_go_7s

import (
    "github.com/stretchr/testify/suite"
    "github.com/valyala/fastjson"
    "io"
    "net/http"
    "strings"
    "testing"
)

// These vars are added so Go compiler doesn't complain if imports aren't used
var _ *fastjson.Object = nil
var _ *io.Reader = nil
var _ *strings.Reader = nil




/**
 * This file was automatically generated by EvoMaster on 2024-04-12T14:53:58.431-03:00[America/Argentina/Buenos_Aires]
 * 
 * The generated test suite contains 1 tests
 * 
 * Covered targets: 4
 * 
 * Used time: 0h 0m 8s
 * 
 * Needed budget for current results: 99%
 * 
 * This file contains test cases that are likely to indicate faults.
 */
type EvoMasterFaultsTest struct {
    suite.Suite
    Controller *AppController
    BaseUrlOfSut string
}

func TestEvoMasterFaultsSuite(t *testing.T) {
    suite.Run(t, new(EvoMasterFaultsTest))
}


func (suite *EvoMasterFaultsTest) SetupSuite() {
    suite.Controller = &AppController{}
    suite.Controller.SetPort(5012)
    suite.BaseUrlOfSut = suite.Controller.StartSut()
}


func (suite *EvoMasterFaultsTest) TearDownSuite() {
    suite.Controller.StopSut()
}


func (suite *EvoMasterFaultsTest) SetupTest() {
    suite.Controller.ResetStateOfSUT()
}




func (suite *EvoMasterFaultsTest) Test_0_with500() {
    
    
    method := http.MethodGet
    reqUrl := "http://" + suite.BaseUrlOfSut + "/api/fisher/-15974/-7859/0.9677559094241207?EMextraParam123=_EM_0_XYZ_"
    
    req, err := http.NewRequest(method, reqUrl, nil)
    suite.Nil(err, "Request creation error must be nil")
    
    req.Header.Set("x-EMextraHeader123", "_EM_1_XYZ_")
    res_0, err := http.DefaultClient.Do(req)
    suite.NoError(err, "Request error must be nil")
    defer res_0.Body.Close()
    
    suite.Equal(500, res_0.StatusCode) // github.com/jcbasso/EMB/go/rest/artificial/ncs/src:utils.go_19_61
    suite.Equal(http.NoBody, res_0.Body)
}
